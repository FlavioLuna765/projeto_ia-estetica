from flask import Flask, render_template, request, jsonify, session
from datetime import timedelta

app = Flask(__name__)
app.secret_key = 'chave-secreta-para-chat'
app.permanent_session_lifetime = timedelta(minutes=10)

agendamentos = {}

def responder_pergunta(pergunta):
    pergunta = pergunta.lower()
    session.permanent = True

    if 'etapa_agendamento' not in session:
        session['etapa_agendamento'] = None
        session['dados_agendamento'] = {}

    etapa = session['etapa_agendamento']
    dados = session['dados_agendamento']

    if "agendar" in pergunta or "marcar" in pergunta or etapa:
        if not etapa:
            session['etapa_agendamento'] = 'nome'
            return "Claro! Vamos agendar seu atendimento. Qual √© o seu nome completo?"

        elif etapa == 'nome':
            dados['nome'] = pergunta.title()
            session['etapa_agendamento'] = 'servi√ßo'
            return f"Obrigada, {dados['nome']}! Qual servi√ßo voc√™ deseja agendar?"

        elif etapa == 'servi√ßo':
            dados['servi√ßo'] = pergunta
            session['etapa_agendamento'] = 'data'
            return "Perfeito! Qual dia voc√™ gostaria de agendar? (Ex: 15/05)"

        elif etapa == 'data':
            dados['data'] = pergunta
            session['etapa_agendamento'] = 'hora'
            return "E qual hor√°rio voc√™ prefere? (Ex: 14h ou 14:00)"

        elif etapa == 'hora':
            dados['hora'] = pergunta
            session['etapa_agendamento'] = None
            cliente = dados['nome']
            servico = dados['servi√ßo']
            data_hora = f"{dados['data']} √†s {dados['hora']}"

            agendamentos[cliente] = {
                'servi√ßo': servico,
                'data': dados['data'],
                'hora': dados['hora']
            }

            session['dados_agendamento'] = {}

            return (
                f"‚úÖ Agendamento conclu√≠do!\n"
                f"Cliente: {cliente}\n"
                f"Servi√ßo: {servico}\n"
                f"Data e Hora: {data_hora}\n\n"
                f"Voc√™ precisa de mais alguma coisa? (Sim/N√£o)"
            )

    # Respostas melhoradas com palavras-chave flex√≠veis
    if any(p in pergunta for p in ["servi√ßos", "procedimentos", "o que voc√™s fazem"]):
        return (
            "Oferecemos os seguintes servi√ßos:\n"
            "- Design de sobrancelha\n"
            "- Micropigmenta√ß√£o de sobrancelha\n"
            "- Micropigmenta√ß√£o de l√°bios\n"
            "- Depila√ß√£o geral com cera\n"
            "- Limpeza profunda de pele com microagulhamento\n"
            "- Tratamento facial com jato de plasma\n"
            "- Peeling de algas\n"
            "- Dermaplaning"
        )

    elif any(p in pergunta for p in ["sobrancelha", "design de sobrancelha", "fazer sobrancelha"]):
        return (
            "O design de sobrancelha valoriza seu olhar com t√©cnicas de simetria facial. "
            "Dura cerca de 30 minutos e custa R$40,00."
        )

    elif any(p in pergunta for p in ["micropigmenta√ß√£o"]):
        return (
            "Temos dois tipos de micropigmenta√ß√£o:\n"
            "- Micropigmenta√ß√£o de sobrancelhas\n"
            "- Micropigmenta√ß√£o de l√°bios\n"
            "Qual deles voc√™ gostaria de saber mais?"
        )

    elif any(p in pergunta for p in ["micropigmenta√ß√£o de sobrancelha", "fio a fio", "micropigmentar sobrancelha", "micropigmentacao sobrancelha"]):
        return (
            "A micropigmenta√ß√£o de sobrancelhas simula fios para corrigir falhas. "
            "Dura de 1 a 2 anos e custa R$350,00."
        )

    elif any(p in pergunta for p in ["micropigmenta√ß√£o de l√°bios", "micropigmenta√ß√£o labial", "l√°bios", "pigmentar boca"]):
        return (
            "Real√ßa o contorno e a cor dos l√°bios, com efeito natural. "
            "Custa R$400,00 e dura cerca de 2 horas."
        )

    elif any(p in pergunta for p in ["depila√ß√£o", "depilar", "cera", "pelos"]):
        return (
            "Fazemos depila√ß√£o com cera quente para todo o corpo. "
            "Pre√ßos entre R$30 e R$100 conforme a √°rea."
        )

    elif any(p in pergunta for p in ["limpeza", "limpeza de pele", "microagulhamento", "limpar rosto", "cravos"]):
        return (
            "A limpeza profunda com microagulhamento remove impurezas e estimula col√°geno. "
            "Ideal para peles com acne ou manchas. Valor: R$180,00."
        )

    elif any(p in pergunta for p in ["jato de plasma", "plasma", "manchas", "tratamento facial plasma"]):
        return (
            "O jato de plasma √© usado para rejuvenescimento e remo√ß√£o de manchas. "
            "Valor: R$250,00 por sess√£o."
        )

    elif any(p in pergunta for p in ["peeling", "peeling de algas", "algas", "esfolia√ß√£o"]):
        return (
            "O peeling de algas √© natural e indicado para peles sens√≠veis. "
            "Promove renova√ß√£o celular. Valor: R$150,00."
        )

    elif any(p in pergunta for p in ["dermaplaning", "dermaplanagem", "pelos faciais", "raspar pele"]):
        return (
            "O dermaplaning remove c√©lulas mortas e pelos finos do rosto. Deixa a pele lisa e brilhante. "
            "Valor: R$130,00."
        )

    elif any(p in pergunta for p in ["d√≥i", "d√≥i muito", "√© dolorido", "machuca"]):
        return "Os procedimentos s√£o feitos com muito cuidado. A maioria √© bem toler√°vel e pouco dolorida."

    elif any(p in pergunta for p in ["quantas sess√µes", "quantas vezes", "precisa de mais de uma"]):
        return "Depende do tratamento e do tipo de pele. Normalmente s√£o de 1 a 4 sess√µes."

    elif any(p in pergunta for p in ["dura√ß√£o", "quanto tempo", "demora"]):
        return "Os procedimentos duram entre 30 minutos e 2 horas, dependendo do tipo."

    elif any(p in pergunta for p in ["hor√°rio", "funcionamento", "abre que horas", "fecha que horas"]):
        return "Funcionamos de segunda a s√°bado, das 9h √†s 19h."

    elif any(p in pergunta for p in ["localiza√ß√£o", "onde fica", "endere√ßo", "como chegar"]):
        return "Estamos localizados na Rua das Flores, n¬∫ 123 ‚Äì Centro."

    elif any(p in pergunta for p in ["n√£o", "n√£o precisa", "n√£o quero mais nada", "nada"]):
        return "Muito obrigado pelo seu tempo! üòä Ficamos √† disposi√ß√£o para tirar mais d√∫vidas ou agendar novos servi√ßos. At√© logo!"

    return "Desculpe, n√£o entendi. Voc√™ pode perguntar sobre servi√ßos, valores ou agendamento."


@app.route('/')
def index():
    return render_template('index.html')


@app.route('/mensagem', methods=['POST'])
def mensagem():
    data = request.json
    pergunta = data.get('pergunta', '')
    resposta = responder_pergunta(pergunta)
    return jsonify({'resposta': resposta})


if __name__ == '__main__':
    app.run(debug=True)
